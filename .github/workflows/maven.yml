# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B compile --file pom.xml
      - name: Start Spring Boot Application
        run: mvn spring-boot:run &
#        background: true

#      - name: Wait for Spring Boot Application to Start
#        run: sleep 30

      - name: Custom Authentication Provider Test
        run: mvn -Dtest=CustomAuthenticationProviderTest test

      - name: Authentication Controller Unit Test
        run: mvn -Dtest=AuthenticationControllerTest test

      - name: CustomExceptionHandlerTest Unit Test
        run: mvn -Dtest=CustomExceptionHandlerTest test

      - name: JsonAuthenticationFilterTest Unit Test
        run: mvn -Dtest=JsonAuthenticationFilterTest test

      - name: Register Controller Unit Test
        run: mvn -Dtest=RegisterControllerTest test

      - name: User Controller Unit Test
        run: mvn -Dtest=UserControllerTest test

      - name: Dispatch Controller Unit Test
        run: mvn -Dtest=DispatchControllerTest test

      - name: Dispatch History Controller Unit Test
        run: mvn -Dtest=DispatchHistoryControllerTest test

      - name: Register Service Test
        run: mvn -Dtest=RegisterServiceTest test

      - name: Integration Test
        run: mvn -Dtest=IntegrationTest test

      - name: Run JaCoCo
        run: mvn test jacoco:report

      - name: Upload JaCoCo Reports
        uses: actions/upload-artifact@v2
        with:
          name: branch-coverage-jacoco-reports
          path: target/site/jacoco

      - name: Run SpotBugs Analysis
        run: mvn spotbugs:spotbugs

      - name: Upload SpotBugs Reports
        uses: actions/upload-artifact@v2
        with:
          name: bug-finder-spotbugs-reports
          path: target/spotbugs.html
