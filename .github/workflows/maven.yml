# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B compile --file pom.xml

      - name: Authentication Controller Unit Test
        run: mvn -Dtest=AuthenticationControllerTest test

      - name: Register Controller Unit Test
        run: mvn -Dtest=RegisterControllerTest test

      - name: User Controller Unit Test
        run: mvn -Dtest=UserControllerTest test

      - name: Dispatch Controller Unit Test
        run: mvn -Dtest=DispatchControllerTest test

      - name: Dispatch History Controller Unit Test
        run: mvn -Dtest=DispatchHistoryControllerTest test

      - name: Integration Test
        run: mvn -Dtest=IntegrationTest test

      - name: Run JaCoCo
        run: mvn test jacoco:report

      - name: Upload JaCoCo Reports
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-reports
          path: target/site/jacoco

#      - name: Run SpotBugs Analysis and Upload Report
#        run: mvn spotbugs:gui
        # Upload the SpotBugs reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: spotbugs-reports
#          path: target/spotbugs

#      - name: Run SpotBugs Analysis
#        run: |
#          mvn spotbugs:check 2> spotbugs-errors.txt || true
#          if [ -s spotbugs-errors.txt ]; then
#            echo "SpotBugs found issues:"
#            cat spotbugs-errors.txt
#          fi

#      - name: Upload SpotBugs Reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: spotbugs-reports
#          path: target/spotbugs

#      - name: Upload SpotBugs Errors
#        if: always()  # Upload errors even if there are no issues
#        uses: actions/upload-artifact@v2
#        with:
#          name: spotbugs-errors
#          path: spotbugs-errors.txt


      - name: Run SpotBugs Analysis
        run: mvn spotbugs:check

#      - name: Run SpotBugs Analysis
#        run: mvn spotbugs:check || true

      - name: Upload SpotBugs Reports
        uses: actions/upload-artifact@v2
        with:
          name: spotbugs-reports
          path: target/spotbugs


#      - name: Always Upload SpotBugs Reports
#        if: always()  # Upload the reports regardless of previous steps' outcomes
#        uses: actions/upload-artifact@v2
#        with:
#          name: spotbugs-reports
#          path: target/spotbugs
#
#      - name: Debug Workspace
#        run: |
#          ls -R
#          echo "Current Directory: $PWD"
      

      #      - name: Upload coverage to Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: ./target/site/jacoco/jacoco.xml

      #      - name: Upload coverage to Codecov
      #        uses: codecov/codecov-action@v2
      #        with:
      #            files: ./target/site/jacoco/jacoco.xml
      #            fail_ci_if_error: true

#      - name: Archive JaCoCo Reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: jacoco-reports
#          path: target/site/jacoco/

      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6


#  automated-api-tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install Postman CLI
#        run: |
#          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
#      - name: Login to Postman CLI
#        run: postman login --with-api-key PMAK-6565576ac402527f15f44c7c-ec6269f96c85e3d4220357c979b4ba9f18
#      - name: Run API tests
#        run: |
#          postman collection run "30513862-c0eb6f7c-d809-4afe-934f-76cd6cdaa339" -e "30513862-e48d36ea-69f6-463e-a1a7-057c19ac3a90"

#  automated-api-tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install Postman CLI
#        run: |
#          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
#      - name: Login to Postman CLI
#        run: postman login --with-api-key PMAK-6566045e3c33ce3342fd6718-90008933ccff780237fc0fdf760f9156ae
#      - name: Run API tests
#        run: |
#          postman collection run "${{ github.workspace }}/postman/collections/Integration Testing.json" -e "30513862-e48d36ea-69f6-463e-a1a7-057c19ac3a90" --integration-id "153641-${{ github.run_id }}"

#  postman_tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v1
#        with:
#          node-version: '16'  # Updated Node.js version
#
#      - name: Install Newman
#        run: npm install -g newman
#
#      - name: Run a basic Newman test
#        run: newman run https://www.postman.com/collections/8a0c9bc08f062d12dcda  # This is a sample collection URL
#
#      - name: Run Postman tests
#        run: newman run Integration_Testing.postman_collection.json --verbose
